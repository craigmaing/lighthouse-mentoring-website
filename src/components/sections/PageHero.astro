---
export interface Props {
  title: string;
  subtitle?: string;
  description?: string;
  ctaText?: string;
  ctaLink?: string;
  secondaryCtaText?: string;
  secondaryCtaLink?: string;
  heroImage?: string;
  heroImageAlt?: string;
  showCredentials?: boolean;
}

const { 
  title, 
  subtitle, 
  description, 
  ctaText, 
  ctaLink,
  secondaryCtaText,
  secondaryCtaLink,
  heroImage,
  heroImageAlt,
  showCredentials = true
} = Astro.props;

// Import hero image if provided
const heroImagePath = heroImage || '/Gemini_Generated_Image_qn1gyeqn1gyeqn1g.png';
---

<section class="relative min-h-[80vh] flex items-center bg-gradient-to-br from-primary-50 via-white to-secondary-50 overflow-hidden">
  <!-- Background Pattern -->
  <div class="absolute inset-0 opacity-5">
    <div class="absolute inset-0" style="background-image: url('data:image/svg+xml,%3Csvg width="60" height="60" viewBox="0 0 60 60" xmlns="http://www.w3.org/2000/svg"%3E%3Cg fill="none" fill-rule="evenodd"%3E%3Cg fill="%239C92AC" fill-opacity="0.4"%3E%3Cpath d="M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z"/%3E%3C/g%3E%3C/g%3E%3C/svg%3E');"></div>
  </div>

  <div class="container relative z-10">
    <div class="grid lg:grid-cols-2 gap-12 items-center">
      <!-- Content Column -->
      <div class="text-center lg:text-left">
        
        <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 mb-6">
          {title}
          {subtitle && (
            <span class="block text-transparent bg-clip-text bg-gradient-to-r from-primary-600 to-secondary-600 mt-2">
              {subtitle}
            </span>
          )}
        </h1>
        
        {description && (
          <p class="text-lg md:text-xl text-gray-600 mb-8 leading-relaxed">
            {description}
          </p>
        )}
        
        {(ctaText || secondaryCtaText) && (
          <div class="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start">
            {ctaText && (
              <a href={ctaLink} class="inline-flex items-center justify-center px-8 py-4 text-base font-medium text-white bg-gradient-to-r from-primary-600 to-primary-700 hover:from-primary-700 hover:to-primary-800 rounded-md shadow-lg transition-all duration-200 transform hover:scale-105">
                {ctaText}
                <svg class="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
                </svg>
              </a>
            )}
            {secondaryCtaText && (
              <a href={secondaryCtaLink} class="inline-flex items-center justify-center px-8 py-4 text-base font-medium text-primary-700 bg-white border-2 border-primary-300 hover:bg-primary-50 hover:border-primary-400 rounded-md shadow-md hover:shadow-lg transition-all duration-200">
                {secondaryCtaText}
              </a>
            )}
          </div>
        )}
      </div>
      
      <!-- Image Column -->
      {heroImage && (
        <div class="relative">
          <!-- Decorative background element -->
          <div class="absolute -inset-4 bg-gradient-to-r from-primary-200 to-secondary-200 rounded-3xl opacity-20 blur-2xl"></div>
          
          <div class="relative rounded-2xl overflow-hidden shadow-2xl transform hover:scale-105 transition-transform duration-300">
            <img 
              src={heroImagePath} 
              alt={heroImageAlt || "Hero image"}
              class="w-full h-auto"
              loading="eager"
              style="filter: drop-shadow(0 25px 50px rgba(0, 0, 0, 0.15));"
            />
            <div class="absolute inset-0 bg-gradient-to-t from-primary-900/10 to-transparent pointer-events-none"></div>
          </div>
          
          <!-- Floating accent element -->
          <div class="absolute -bottom-4 -right-4 w-24 h-24 bg-gradient-to-br from-primary-400 to-secondary-400 rounded-full opacity-20 blur-xl"></div>
        </div>
      )}
    </div>
  </div>
  
  <!-- Scroll Indicator -->
  <div class="absolute bottom-8 left-1/2 -translate-x-1/2 animate-bounce">
    <svg class="w-6 h-6 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
    </svg>
  </div>
</section>