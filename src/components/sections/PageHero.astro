---
export interface Props {
  title: string;
  subtitle?: string;
  description?: string;
  ctaText?: string;
  ctaLink?: string;
  secondaryCtaText?: string;
  secondaryCtaLink?: string;
  heroImage?: string;
  heroImageAlt?: string;
  showCredentials?: boolean;
}

const { 
  title, 
  subtitle, 
  description, 
  ctaText, 
  ctaLink,
  secondaryCtaText,
  secondaryCtaLink,
  heroImage,
  heroImageAlt,
  showCredentials = true
} = Astro.props;

// Import hero image if provided
const heroImagePath = heroImage || '/Gemini_Generated_Image_qn1gyeqn1gyeqn1g.png';
---

<section class="relative min-h-[75vh] flex items-center bg-white overflow-visible py-16">

  <div class="container relative z-10">
    <div class="grid lg:grid-cols-2 gap-12 items-center">
      <!-- Content Column -->
      <div class="text-center lg:text-left">
        
        <h1 class="text-3xl md:text-4xl lg:text-5xl font-bold text-gray-900 mb-6 leading-tight">
          {title}
          {subtitle && (
            <span class="block text-primary-600 mt-3">
              {subtitle}
            </span>
          )}
        </h1>
        
        {description && (
          <p class="text-base md:text-lg text-gray-700 mb-8 leading-relaxed max-w-2xl mx-auto lg:mx-0">
            {description}
          </p>
        )}
        
        {(ctaText || secondaryCtaText) && (
          <div class="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start">
            {ctaText && (
              <a href={ctaLink} class="inline-flex items-center justify-center px-6 py-3 text-base font-medium text-white bg-primary-600 hover:bg-primary-700 rounded-md shadow-sm transition-colors duration-200">
                {ctaText}
                <svg class="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
                </svg>
              </a>
            )}
            {secondaryCtaText && (
              <a href={secondaryCtaLink} class="inline-flex items-center justify-center px-6 py-3 text-base font-medium text-primary-600 bg-white border border-gray-300 hover:bg-gray-50 rounded-md transition-colors duration-200">
                {secondaryCtaText}
              </a>
            )}
          </div>
        )}
      </div>
      
      <!-- Image Column -->
      {heroImage && (
        <div class="relative max-w-xl mx-auto lg:max-w-none">
          <div class="rounded-lg overflow-hidden">
            <img 
              src={heroImagePath} 
              alt={heroImageAlt || "Hero image"}
              class="w-full h-auto max-h-[450px] object-contain"
              loading="eager"
            />
          </div>
        </div>
      )}
    </div>
  </div>
  
</section>