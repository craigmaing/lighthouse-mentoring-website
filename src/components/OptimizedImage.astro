---
import { Image } from 'astro:assets';

export interface Props {
  src: string;
  alt: string;
  class?: string;
  width?: number;
  height?: number;
  loading?: 'lazy' | 'eager';
  quality?: number;
}

const { 
  src, 
  alt, 
  class: className = '', 
  width,
  height,
  loading = 'lazy',
  quality = 'mid'
} = Astro.props;

// For images in public folder, we need to use regular img tag
// as Astro Image component works best with imports
const isPublicImage = src.startsWith('/');

// Determine appropriate dimensions based on image type
const isBadge = alt.toLowerCase().includes('badge') || alt.toLowerCase().includes('fellow') || alt.toLowerCase().includes('ambassador');
const isBanner = alt.toLowerCase().includes('finalist') || alt.toLowerCase().includes('director');

// Set default dimensions if not provided
let imageWidth = width;
let imageHeight = height;

if (!width && !height) {
  if (isBadge) {
    imageHeight = 80; // Default badge height
  } else if (isBanner) {
    imageWidth = 400; // Default banner width
  }
}
---

{isPublicImage ? (
  <img 
    src={src}
    alt={alt}
    class={className}
    width={imageWidth}
    height={imageHeight}
    loading={loading}
    decoding="async"
  />
) : (
  <Image 
    src={src}
    alt={alt}
    class={className}
    width={imageWidth || 800}
    height={imageHeight || 600}
    loading={loading}
    quality={quality}
    format="webp"
  />
)}